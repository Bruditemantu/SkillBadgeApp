{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import Axios from 'axios';\n// import './EditProfile.css';\n\n// const EditProfile = () => {\n//   const [userData, setUserData] = useState({\n//     username:'',\n//     name: '',\n//     contact_info: '',\n//     email :'',\n//   });\n//   const onChangeInput = (e) => {\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\n//   };\n//   const handlePatchAPI = async () => {\n//     try {\n//       const response = await Axios.patch(\n//         \"http://127.0.0.1:8000/api/recipient/update-user/\",\n//         {\n//           name: userData.name,\n//           contact_info: userData.contact_info,\n//         },\n//         {\n//           headers: {\n//             Authorization: \"token 7386ff07e42ea1ad485ae2b35e57a2c7c6311f5d\", // Replace with your authentication token\n//           },\n//         }\n//       );\n\n//       console.log(\"Profile updated successfully:\", response.data);\n//       // You can add a success message or redirect the user to another page\n//     } catch (error) {\n//       console.error('Error updating user profile:', error);\n//       // Handle the error, display an error message, or redirect the user accordingly\n//     }\n//   };\n\n//   const {  name, contact_info,username,email } = userData;\n\n//   useEffect(() => {\n//     const fetchUserData = async () => {\n//       try {\n//         const response = await Axios.get(\"http://127.0.0.1:8000/api/recipient/alluser/\", {\n//           headers: {\n//             Authorization: \"token 7386ff07e42ea1ad485ae2b35e57a2c7c6311f5d\", // Replace with your authentication token\n//           },\n//         });\n\n//         setUserData({\n//           name:response.data.data.name,\n//           contact_info:response.data.data.contact_info,\n//           username:response.data.data.username,\n//           email:response.data.data.email,\n//         });\n//         console.log(response.data.data);\n//       } catch (error) {\n//         console.error('Error fetching user data:', error);\n//       }\n//     };\n\n//     fetchUserData();\n//   }, []); // Empty dependency array ensures this effect runs once when the component mounts\n\n//   return (\n//     <>\n\n//       <form >\n//           <h3>Register Here</h3>\n\n//           <div className=\"form-feilds\">\n//             <div className=\"left\">\n//               <label htmlFor=\"username\">Name</label>\n//               <input\n//                 onChange={onChangeInput}\n//                 value={name}\n//                 type=\"text\"\n//                 placeholder=\"Enter Name\"\n//                 name=\"name\"\n//                 required\n//               />\n//               <label htmlFor=\"email\">Email</label>\n//               <input\n//                 value={email}\n//                 onChange={onChangeInput}\n//                 type=\"email\"\n//                 placeholder=\"Enter Email\"\n//                 id=\"email\"\n//                 name=\"email\"\n//                 required\n//                 readOnly\n//               />\n\n//             </div>\n//             <div className=\"right\">\n//               <label htmlFor=\"username\">Username</label>\n//               <input\n//                 value={username}\n//                 onChange={onChangeInput}\n//                 type=\"text\"\n//                 placeholder=\"Enter Username\"\n//                 id=\"username\"\n//                 name=\"username\"\n//                 required\n//                 readOnly\n//               />\n//               <label htmlFor=\"contact_info\">Contact Info</label>\n//               <input\n//                 value={contact_info}\n//                 onChange={onChangeInput}\n//                 type=\"text\"\n//                 placeholder=\"Enter Contact Info\"\n//                 id=\"contact_info\"\n//                 name=\"contact_info\"\n//                 required\n//               />\n\n//             </div>\n//           </div>\n//           <button type=\"submit\">Log In</button>\n//           <a href=\"/login\">Already Registered? Sign-In</a>\n//         </form>\n\n//     </>\n//   );\n// };\n\n// export default EditProfile;","map":{"version":3,"names":[],"sources":["C:/Users/bhupendra/Desktop/brudite/project/SkillBadgeApp/client/src/Components/EditProfile/EditProfile.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import Axios from 'axios';\r\n// import './EditProfile.css';\r\n\r\n// const EditProfile = () => {\r\n//   const [userData, setUserData] = useState({\r\n//     username:'',\r\n//     name: '',\r\n//     contact_info: '',\r\n//     email :'',\r\n//   });\r\n//   const onChangeInput = (e) => {\r\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\r\n//   };\r\n//   const handlePatchAPI = async () => {\r\n//     try {\r\n//       const response = await Axios.patch(\r\n//         \"http://127.0.0.1:8000/api/recipient/update-user/\",\r\n//         {\r\n//           name: userData.name,\r\n//           contact_info: userData.contact_info,\r\n//         },\r\n//         {\r\n//           headers: {\r\n//             Authorization: \"token 7386ff07e42ea1ad485ae2b35e57a2c7c6311f5d\", // Replace with your authentication token\r\n//           },\r\n//         }\r\n//       );\r\n\r\n//       console.log(\"Profile updated successfully:\", response.data);\r\n//       // You can add a success message or redirect the user to another page\r\n//     } catch (error) {\r\n//       console.error('Error updating user profile:', error);\r\n//       // Handle the error, display an error message, or redirect the user accordingly\r\n//     }\r\n//   };\r\n\r\n//   const {  name, contact_info,username,email } = userData;\r\n\r\n//   useEffect(() => {\r\n//     const fetchUserData = async () => {\r\n//       try {\r\n//         const response = await Axios.get(\"http://127.0.0.1:8000/api/recipient/alluser/\", {\r\n//           headers: {\r\n//             Authorization: \"token 7386ff07e42ea1ad485ae2b35e57a2c7c6311f5d\", // Replace with your authentication token\r\n//           },\r\n//         });\r\n\r\n//         setUserData({\r\n//           name:response.data.data.name,\r\n//           contact_info:response.data.data.contact_info,\r\n//           username:response.data.data.username,\r\n//           email:response.data.data.email,\r\n//         });\r\n//         console.log(response.data.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching user data:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchUserData();\r\n//   }, []); // Empty dependency array ensures this effect runs once when the component mounts\r\n\r\n//   return (\r\n//     <>\r\n      \r\n//       <form >\r\n//           <h3>Register Here</h3>\r\n         \r\n//           <div className=\"form-feilds\">\r\n//             <div className=\"left\">\r\n//               <label htmlFor=\"username\">Name</label>\r\n//               <input\r\n//                 onChange={onChangeInput}\r\n//                 value={name}\r\n//                 type=\"text\"\r\n//                 placeholder=\"Enter Name\"\r\n//                 name=\"name\"\r\n//                 required\r\n//               />\r\n//               <label htmlFor=\"email\">Email</label>\r\n//               <input\r\n//                 value={email}\r\n//                 onChange={onChangeInput}\r\n//                 type=\"email\"\r\n//                 placeholder=\"Enter Email\"\r\n//                 id=\"email\"\r\n//                 name=\"email\"\r\n//                 required\r\n//                 readOnly\r\n//               />\r\n             \r\n//             </div>\r\n//             <div className=\"right\">\r\n//               <label htmlFor=\"username\">Username</label>\r\n//               <input\r\n//                 value={username}\r\n//                 onChange={onChangeInput}\r\n//                 type=\"text\"\r\n//                 placeholder=\"Enter Username\"\r\n//                 id=\"username\"\r\n//                 name=\"username\"\r\n//                 required\r\n//                 readOnly\r\n//               />\r\n//               <label htmlFor=\"contact_info\">Contact Info</label>\r\n//               <input\r\n//                 value={contact_info}\r\n//                 onChange={onChangeInput}\r\n//                 type=\"text\"\r\n//                 placeholder=\"Enter Contact Info\"\r\n//                 id=\"contact_info\"\r\n//                 name=\"contact_info\"\r\n//                 required\r\n//               />\r\n              \r\n//             </div>\r\n//           </div>\r\n//           <button type=\"submit\">Log In</button>\r\n//           <a href=\"/login\">Already Registered? Sign-In</a>\r\n//         </form>\r\n      \r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default EditProfile;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}